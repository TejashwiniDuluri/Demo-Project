# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-01-03 05:23
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('polls', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sl_no', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=150)),
                ('next_chap', models.IntegerField(blank=True, null=True)),
                ('Description', models.TextField(max_length=1000)),
                ('doc', models.CharField(blank=True, max_length=200, null=True)),
                ('page_content', models.CharField(blank=True, max_length=200, null=True)),
                ('duration', models.FloatField()),
                ('completed_perc', models.FloatField()),
                ('timetaken', models.FloatField()),
                ('completion_status', models.BooleanField()),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('Description', models.TextField(max_length=1000)),
                ('duration', models.FloatField()),
                ('author', models.CharField(max_length=150)),
                ('prerequisites', models.TextField(max_length=1000)),
                ('no_of_milestones', models.IntegerField()),
                ('tag_name', models.CharField(max_length=100)),
                ('time', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_demo', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ans', models.CharField(max_length=200)),
                ('correct', models.BooleanField(default=False)),
                ('wrong', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ans_records', jsonfield.fields.JSONField(blank=True, max_length=200, null=True)),
                ('assign_percent', models.FloatField(blank=True, null=True)),
                ('assign_timetaken', models.FloatField(blank=True, null=True)),
                ('assign_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('assign_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('test_test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Milestone')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ques', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('test_chap', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Milestone')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectTestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ans_records', jsonfield.fields.JSONField()),
                ('test_percent', models.FloatField()),
                ('test_timetaken', models.FloatField()),
                ('test_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('test_test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.ProjectTest')),
                ('test_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredMilestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timetaken', models.FloatField()),
                ('completed_perc', models.FloatField()),
                ('completion_status', models.BooleanField()),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Milestone')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timetaken', models.FloatField()),
                ('completed_perc', models.FloatField()),
                ('completion_status', models.BooleanField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tagging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(blank=True, max_length=200, null=True)),
                ('file', models.CharField(blank=True, max_length=200, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.Courses')),
            ],
        ),
        migrations.AddField(
            model_name='projectquestion',
            name='test_question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.ProjectTest'),
        ),
        migrations.AddField(
            model_name='projectanswer',
            name='ans_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.ProjectQuestion'),
        ),
        migrations.AddField(
            model_name='projcart',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.AddField(
            model_name='projcart',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='milestone',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Project'),
        ),
        migrations.AddField(
            model_name='milestone',
            name='tag_name',
            field=models.ManyToManyField(to='projects.Tagging'),
        ),
    ]
